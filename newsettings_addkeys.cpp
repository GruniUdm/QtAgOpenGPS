// Copyright (C) 2024 Michael Torrie and the QtAgOpenGPS Dev Team
// SPDX-License-Identifier: GNU General Public License v3.0 or later
//
#include "newsettings.h"

void NewSettings::setupKeys() {

    addKey("ab/lineLength", 1600, QMetaType(QMetaType::Double));
    addKey("ardMac/hydLowerTime", 4, QMetaType(QMetaType::Int));
    addKey("ardMac/hydRaiseTime", 3, QMetaType(QMetaType::Int));
    addKey("ardMac/isDanFoss", false, QMetaType(QMetaType::Bool));
    addKey("ardMac/isHydEnabled", 0, QMetaType(QMetaType::Bool));
    addKey("ardMac/setting0", 0, QMetaType(QMetaType::Int));
    addKey("ardMac/user1", 1, QMetaType(QMetaType::Int));
    addKey("ardMac/user2", 2, QMetaType(QMetaType::Int));
    addKey("ardMac/user3", 3, QMetaType(QMetaType::Int));
    addKey("ardMac/user4", 4, QMetaType(QMetaType::Int));
    addKey("ardSteer/ardSteerMaxPulseCounts", 3, QMetaType(QMetaType::Int));
    addKey("ardSteer/maxSpeed", 20, QMetaType(QMetaType::Double));
    addKey("ardSteer/minSpeed", 0, QMetaType(QMetaType::Double));
    addKey("ardSteer/setting0", 56, QMetaType(QMetaType::Int));
    addKey("ardSteer/setting1", 0, QMetaType(QMetaType::Int));
    addKey("ardSteer/setting2", 0, QMetaType(QMetaType::Int));
    addKey("as/ackerman", 100, QMetaType(QMetaType::Int));
    addKey("as/countsPerDegree", 110, QMetaType(QMetaType::Int));
    addKey("as/deadZoneDelay", 5, QMetaType(QMetaType::Int));
    addKey("as/deadZoneDistance", 1, QMetaType(QMetaType::Int));
    addKey("as/deadZoneHeading", 10, QMetaType(QMetaType::Int));
    addKey("as/functionSpeedLimit", 12, QMetaType(QMetaType::Int));
    addKey("as/guidanceLookAheadTime", 1.5, QMetaType(QMetaType::Double));
    addKey("as/highSteerPWM", 180, QMetaType(QMetaType::Int));
    addKey("as/isAutoSteerAutoOn", false, QMetaType(QMetaType::Bool));
    addKey("as/isConstantContourOn", false, QMetaType(QMetaType::Bool));
    addKey("as/isSteerInReverse", false, QMetaType(QMetaType::Bool));
    addKey("as/Kp", 50, QMetaType(QMetaType::Int));
    addKey("as/lowSteerPWM", 30, QMetaType(QMetaType::Int));
    addKey("as/maxSteerSpeed", 15, QMetaType(QMetaType::Double));
    addKey("as/minSteerPWM", 25, QMetaType(QMetaType::Int));
    addKey("as/minSteerSpeed", 0, QMetaType(QMetaType::Double));
    addKey("as/modeMultiplierStanley", 0.6, QMetaType(QMetaType::Double));
    addKey("as/modeTime", 1, QMetaType(QMetaType::Int));
    addKey("as/modeXTE", 0.1, QMetaType(QMetaType::Double));
    addKey("as/numGuideLines", 10, QMetaType(QMetaType::Int));
    addKey("as/sideHillCompensation", 0, QMetaType(QMetaType::Double));
    addKey("as/snapDistance", 20, QMetaType(QMetaType::Double));
    addKey("as/snapDistanceRef", 5, QMetaType(QMetaType::Double));
    addKey("as/uTurnCompensation", 1, QMetaType(QMetaType::Double));
    addKey("as/uTurnSmoothing", 14, QMetaType(QMetaType::Int));
    addKey("as/wasOffset", 3, QMetaType(QMetaType::Double));
    addKey("bnd/isDrawPivot", true, QMetaType(QMetaType::Bool));
    addKey("brand/HBrand", "AgOpenGPS", QMetaType(QMetaType::QString));
    addKey("brand/TBrand", "AGOpenGPS", QMetaType(QMetaType::QString));
    addKey("brand/WDBrand", "AgOpenGPS", QMetaType(QMetaType::QString));
    addKey("cam/camLink", QString("rtsp://192.168.0.138:1945"), QMetaType(QMetaType::QString));
    addKey("color/isMultiColorSections", false, QMetaType(QMetaType::Bool));
    addKey("color/sec01", QColor(249, 22, 10), QMetaType(QMetaType::QColor));
    addKey("color/sec02", QColor(68, 84, 254), QMetaType(QMetaType::QColor));
    addKey("color/sec03", QColor(8, 243, 8), QMetaType(QMetaType::QColor));
    addKey("color/sec04", QColor(233, 6, 233), QMetaType(QMetaType::QColor));
    addKey("color/sec05", QColor(200, 191, 86), QMetaType(QMetaType::QColor));
    addKey("color/sec06", QColor(0, 252, 246), QMetaType(QMetaType::QColor));
    addKey("color/sec07", QColor(144, 36, 246), QMetaType(QMetaType::QColor));
    addKey("color/sec08", QColor(232, 102, 21), QMetaType(QMetaType::QColor));
    addKey("color/sec09", QColor(255, 160, 170), QMetaType(QMetaType::QColor));
    addKey("color/sec10", QColor(205, 204, 246), QMetaType(QMetaType::QColor));
    addKey("color/sec11", QColor(213, 239, 190), QMetaType(QMetaType::QColor));
    addKey("color/sec12", QColor(247, 200, 247), QMetaType(QMetaType::QColor));
    addKey("color/sec13", QColor(253, 241, 144), QMetaType(QMetaType::QColor));
    addKey("color/sec14", QColor(187, 250, 250), QMetaType(QMetaType::QColor));
    addKey("color/sec15", QColor(227, 201, 249), QMetaType(QMetaType::QColor));
    addKey("color/sec16", QColor(247, 229, 215), QMetaType(QMetaType::QColor));
    addKey("display/antiAliasSamples", 0, QMetaType(QMetaType::Int));
    addKey("display/autoDayNight", false, QMetaType(QMetaType::Bool));
    addKey("display/brightness", 40, QMetaType(QMetaType::Int));
    addKey("display/brightnessSystem", 40, QMetaType(QMetaType::Int));
    addKey("display/buttonOrder", "0,1,2,3,4,5,6,7", QMetaType(QMetaType::QString));
    addKey("display/camPitch", -62, QMetaType(QMetaType::Double));
    addKey("display/camSmooth", 50, QMetaType(QMetaType::Double));
    addKey("display/camZoom", 9, QMetaType(QMetaType::Double));
    addKey("display/colorDayBackground", QColor::fromRgb(245, 245, 245), QMetaType(QMetaType::QColor));
    addKey("display/colorDayBorder", QColor::fromRgb(215, 228, 242), QMetaType(QMetaType::QColor));
    addKey("display/colorDayFrame", QColor(210, 210, 230), QMetaType(QMetaType::QColor));
    addKey("display/colorFieldDay", QColor(145, 145, 145), QMetaType(QMetaType::QColor));
    addKey("display/colorFieldNight", QColor(60, 60, 60), QMetaType(QMetaType::QColor));
    addKey("display/colorNightBackground", QColor::fromRgb(50, 50, 65), QMetaType(QMetaType::QColor));
    addKey("display/colorNightBorder", QColor::fromRgb(210, 210, 230), QMetaType(QMetaType::QColor));
    addKey("display/colorNightFrame", QColor(50, 50, 65), QMetaType(QMetaType::QColor));
    addKey("display/colorSectionsDay", QColor(27, 151, 160), QMetaType(QMetaType::QColor));
    addKey("display/colorSectionsNight", QColor(27, 100, 100), QMetaType(QMetaType::QColor));
    addKey("display/colorTextDay", QColor("Black"), QMetaType(QMetaType::QColor));
    addKey("display/colorTextNight", QColor(230, 230, 230), QMetaType(QMetaType::QColor));
    addKey("display/colorVehicle", QColor("White"), QMetaType(QMetaType::QColor));
    addKey("display/customColors", "-62208,-12299010,-16190712,-1505559,-3621034,-16712458,-7330570,-1546731,-24406,-3289866,-2756674,-538377,-134768,-4457734,-1848839,-530985", QMetaType(QMetaType::QString));
    addKey("display/customSectionColors", "-62208,-12299010,-16190712,-1505559,-3621034,-16712458,-7330570,-1546731,-24406,-3289866,-2756674,-538377,-134768,-4457734,-1848839,-530985", QMetaType(QMetaType::QString));
    addKey("display/features", "", QMetaType(QMetaType::QString));
    addKey("display/isAutoOffAgIO", true, QMetaType(QMetaType::Bool));
    addKey("display/isAutoStartAgIO", true, QMetaType(QMetaType::Bool));
    addKey("display/isBrightnessOn", false, QMetaType(QMetaType::Bool));
    addKey("display/isDayMode", true, QMetaType(QMetaType::Bool));
    addKey("display/isHardwareMessages", false, QMetaType(QMetaType::Bool));
    addKey("display/isKeyboardOn", true, QMetaType(QMetaType::Bool));
    addKey("display/isLineSmooth", false, QMetaType(QMetaType::Bool));
    addKey("display/isLogElevation", false, QMetaType(QMetaType::Bool));
    addKey("display/isSectionLinesOn", true, QMetaType(QMetaType::Bool));
    addKey("display/isShutDownWhenNoPower", false, QMetaType(QMetaType::Bool));
    addKey("display/isStartFullscreen", false, QMetaType(QMetaType::Bool));
    addKey("display/isSvennArrowOn", false, QMetaType(QMetaType::Bool));
    addKey("display/isTermsAccepted", false, QMetaType(QMetaType::Bool));
    addKey("display/isTextureOn", true, QMetaType(QMetaType::Bool));
    addKey("display/isVehicleImage", true, QMetaType(QMetaType::Bool));
    addKey("display/lightbarCmPerPixel", 5, QMetaType(QMetaType::Int));
    addKey("display/lineWidth", 2, QMetaType(QMetaType::Double));
    addKey("display/panelSimLocation", QPoint(97, 600), QMetaType(QMetaType::QPoint));
    addKey("display/showBack", false, QMetaType(QMetaType::Bool));
    addKey("display/topTrackNum", false, QMetaType(QMetaType::Bool));
    addKey("display/triangleResolution", 1, QMetaType(QMetaType::Double));
    addKey("display/useTrackZero", false, QMetaType(QMetaType::Bool));
    addKey("display/vehicleOpacity", 100, QMetaType(QMetaType::Double));
    addKey("f/boundaryTriggerDistance", 1, QMetaType(QMetaType::Double));
    addKey("f/currentDir", "", QMetaType(QMetaType::QString));
    addKey("f/isRemoteWorkSystemOn", false, QMetaType(QMetaType::Bool));
    addKey("f/isSteerWorkSwitchEnabled", false, QMetaType(QMetaType::Bool));
    addKey("f/isSteerWorkSwitchManualSections", false, QMetaType(QMetaType::Bool));
    addKey("f/isWorkSwitchActiveLow", true, QMetaType(QMetaType::Bool));
    addKey("f/isWorkSwitchEnabled", false, QMetaType(QMetaType::Bool));
    addKey("f/isWorkSwitchManualSections", false, QMetaType(QMetaType::Bool));
    addKey("f/minHeadingStepDistance", 0.5, QMetaType(QMetaType::Double));
    addKey("f/userTotalArea", 0, QMetaType(QMetaType::Double));
    addKey("feature/isABLineOn", true, QMetaType(QMetaType::Bool));
    addKey("feature/isABSmoothOn", false, QMetaType(QMetaType::Bool));
    addKey("feature/isAgIOOn", true, QMetaType(QMetaType::Bool));
    addKey("feature/isAutoSectionOn", true, QMetaType(QMetaType::Bool));
    addKey("feature/isAutoSteerOn", true, QMetaType(QMetaType::Bool));
    addKey("feature/isBndContourOn", false, QMetaType(QMetaType::Bool));
    addKey("feature/isBoundaryOn", true, QMetaType(QMetaType::Bool));
    addKey("feature/isContourOn", true, QMetaType(QMetaType::Bool));
    addKey("feature/isCurveOn", true, QMetaType(QMetaType::Bool));
    addKey("feature/isCycleLinesOn", true, QMetaType(QMetaType::Bool));
    addKey("feature/isHeadlandOn", true, QMetaType(QMetaType::Bool));
    addKey("feature/isHideContourOn", false, QMetaType(QMetaType::Bool));
    addKey("feature/isLateralOn", true, QMetaType(QMetaType::Bool));
    addKey("feature/isManualSectionOn", true, QMetaType(QMetaType::Bool));
    addKey("feature/isOffsetFixOn", false, QMetaType(QMetaType::Bool));
    addKey("feature/isRecPathOn", false, QMetaType(QMetaType::Bool));
    addKey("feature/isSteerModeOn", true, QMetaType(QMetaType::Bool));
    addKey("feature/isTramOn", false, QMetaType(QMetaType::Bool));
    addKey("feature/isUTurnOn", true, QMetaType(QMetaType::Bool));
    addKey("feature/isWebCamOn", false, QMetaType(QMetaType::Bool));
    addKey("feature/isYouTurnOn", true, QMetaType(QMetaType::Bool));
    addKey("gps/ageAlarm", 20, QMetaType(QMetaType::Int));
    addKey("gps/dualHeadingOffset", 0, QMetaType(QMetaType::Double));
    addKey("gps/dualReverseDetectionDistance", 0.25, QMetaType(QMetaType::Double));
    addKey("gps/fixFromWhichSentence", "GGA", QMetaType(QMetaType::QString));
    addKey("gps/forwardComp", 0.15, QMetaType(QMetaType::Double));
    addKey("gps/headingFromWhichSource", "Fix", QMetaType(QMetaType::QString));
    addKey("gps/isRTK", false, QMetaType(QMetaType::Bool));
    addKey("gps/isRTKKillAutoSteer", false, QMetaType(QMetaType::Bool));
    addKey("gps/jumpFixAlarmDispance", 0, QMetaType(QMetaType::Double));
    addKey("gps/minimumStepLimit", 0.05, QMetaType(QMetaType::Double));
    addKey("gps/reverseComp", 0.3, QMetaType(QMetaType::Double));
    addKey("gps/simLatitude", 53.4360564, QMetaType(QMetaType::Double));
    addKey("gps/simLongitude", -111.160047, QMetaType(QMetaType::Double));
    addKey("gps/udpWatchMSec", 50, QMetaType(QMetaType::Int));
    addKey("headland/isSectionControlled", true, QMetaType(QMetaType::Bool));
    addKey("imu/fusionWeight2", 0.06, QMetaType(QMetaType::Double));
    addKey("imu/invertRoll", false, QMetaType(QMetaType::Bool));
    addKey("imu/isDualAsIMU", false, QMetaType(QMetaType::Bool));
    addKey("imu/isHeadingCorrectionFromAutoSteer", false, QMetaType(QMetaType::Bool));
    addKey("imu/isReverseOn", true, QMetaType(QMetaType::Bool));
    addKey("imu/pitchZeroX16", 0, QMetaType(QMetaType::Double));
    addKey("imu/rollFilter", 0, QMetaType(QMetaType::Double));
    addKey("imu/rollZero", 0, QMetaType(QMetaType::Double));
    addKey("jobMenu/location", QPoint(200, 200), QMetaType(QMetaType::QPoint));
    addKey("jobMenu/size", "640, 530", QMetaType(QMetaType::QString));
    addKey("key/hotKeys", "ACFGMNPTYVW12345678", QMetaType(QMetaType::QString));
    addKey("menu/isCompassOn", true, QMetaType(QMetaType::Bool));
    addKey("menu/isGridOn", true, QMetaType(QMetaType::Bool));
    addKey("menu/isLightBarNotSteerBar", false, QMetaType(QMetaType::Bool));
    addKey("menu/isLightBarOn", true, QMetaType(QMetaType::Bool));
    addKey("menu/isMetric", true, QMetaType(QMetaType::Bool));
    addKey("menu/isOGLZoom", false, QMetaType(QMetaType::Bool));
    addKey("menu/isPureOn", true, QMetaType(QMetaType::Bool));
    addKey("menu/isSideGuideLines", false, QMetaType(QMetaType::Bool));
    addKey("menu/isSimulatorOn", true, QMetaType(QMetaType::Bool));
    addKey("menu/isSkyOn", true, QMetaType(QMetaType::Bool));
    addKey("menu/isSpeedoOn", false, QMetaType(QMetaType::Bool));
    addKey("relay/pinConfig", toVariant(default_relay_pinConfig), QMetaType(QMetaType::Void), NewSettings::VECTOR_OF_INTS);
    addKey("section/isFast", false, QMetaType(QMetaType::Bool));
    addKey("section/position1", -2, QMetaType(QMetaType::Double));
    addKey("section/position10", 0, QMetaType(QMetaType::Double));
    addKey("section/position11", 0, QMetaType(QMetaType::Double));
    addKey("section/position12", 0, QMetaType(QMetaType::Double));
    addKey("section/position13", 0, QMetaType(QMetaType::Double));
    addKey("section/position14", 0, QMetaType(QMetaType::Double));
    addKey("section/position15", 0, QMetaType(QMetaType::Double));
    addKey("section/position16", 0, QMetaType(QMetaType::Double));
    addKey("section/position17", 0, QMetaType(QMetaType::Double));
    addKey("section/position2", -1, QMetaType(QMetaType::Double));
    addKey("section/position3", 1, QMetaType(QMetaType::Double));
    addKey("section/position4", 2, QMetaType(QMetaType::Double));
    addKey("section/position5", 0, QMetaType(QMetaType::Double));
    addKey("section/position6", 0, QMetaType(QMetaType::Double));
    addKey("section/position7", 0, QMetaType(QMetaType::Double));
    addKey("section/position8", 0, QMetaType(QMetaType::Double));
    addKey("section/position9", 0, QMetaType(QMetaType::Double));
    addKey("seed/blockageIsOn", false, QMetaType(QMetaType::Bool));
    addKey("seed/blockCountMax", 1000, QMetaType(QMetaType::Int));
    addKey("seed/blockCountMin", 100, QMetaType(QMetaType::Int));
    addKey("seed/blockRow1", 16, QMetaType(QMetaType::Int));
    addKey("seed/blockRow2", 16, QMetaType(QMetaType::Int));
    addKey("seed/blockRow3", 16, QMetaType(QMetaType::Int));
    addKey("seed/blockRow4", 0, QMetaType(QMetaType::Int));
    addKey("seed/numRows", 32, QMetaType(QMetaType::Int));
    addKey("sound/autoSteerSound", true, QMetaType(QMetaType::Bool));
    addKey("sound/isHydLiftOn", true, QMetaType(QMetaType::Bool));
    addKey("sound/isSectionOn", true, QMetaType(QMetaType::Bool));
    addKey("sound/isUturnOn", true, QMetaType(QMetaType::Bool));
    addKey("tool/defaultSectionWidth", 2, QMetaType(QMetaType::Double));
    addKey("tool/isDirectionMarkers", true, QMetaType(QMetaType::Bool));
    addKey("tool/isDisplayTramControl", true, QMetaType(QMetaType::Bool));
    addKey("tool/isSectionOffWhenOut", true, QMetaType(QMetaType::Bool));
    addKey("tool/isSectionsNotZones", true, QMetaType(QMetaType::Bool));
    addKey("tool/isTBT", false, QMetaType(QMetaType::Bool));
    addKey("tool/isToolFront", false, QMetaType(QMetaType::Bool));
    addKey("tool/isToolRearFixed", false, QMetaType(QMetaType::Bool));
    addKey("tool/isToolTrailing", true, QMetaType(QMetaType::Bool));
    addKey("tool/isTramOuterInverted", false, QMetaType(QMetaType::Bool));
    addKey("tool/numSectionsMulti", 20, QMetaType(QMetaType::Int));
    addKey("tool/sectionWidthMulti", 0.5, QMetaType(QMetaType::Double));
    addKey("tool/toolTrailingHitchLength", -2.5, QMetaType(QMetaType::Double));
    addKey("tool/trailingToolToPivotLength", 0, QMetaType(QMetaType::Double));
    addKey("tool/zones", toVariant(default_zones), QMetaType(QMetaType::Void), NewSettings::VECTOR_OF_INTS);
    addKey("tram/alpha", 0.8, QMetaType(QMetaType::Double));
    addKey("tram/basedOn", 0, QMetaType(QMetaType::Int));
    addKey("tram/isTramOnBackBuffer", true, QMetaType(QMetaType::Bool));
    addKey("tram/offset", 0, QMetaType(QMetaType::Double));
    addKey("tram/passes", 1, QMetaType(QMetaType::Int));
    addKey("tram/skips", 0, QMetaType(QMetaType::Int));
    addKey("tram/snapAdj", 1, QMetaType(QMetaType::Double));
    addKey("tram/width", 24, QMetaType(QMetaType::Double));
    addKey("vehicle/antennaHeight", 3, QMetaType(QMetaType::Double));
    addKey("vehicle/antennaOffset", 0, QMetaType(QMetaType::Double));
    addKey("vehicle/antennaPivot", 0.1, QMetaType(QMetaType::Double));
    addKey("vehicle/goalPointAcquireFactor", 0.9, QMetaType(QMetaType::Double));
    addKey("vehicle/goalPointLookAhead", 3, QMetaType(QMetaType::Double));
    addKey("vehicle/goalPointLookAheadHold", 3, QMetaType(QMetaType::Double));
    addKey("vehicle/goalPointLookAheadMult", 1.5, QMetaType(QMetaType::Double));
    addKey("vehicle/hitchLength", -1, QMetaType(QMetaType::Double));
    addKey("vehicle/hydraulicLiftLookAhead", 2, QMetaType(QMetaType::Double));
    addKey("vehicle/isMachineControlToAutoSteer", false, QMetaType(QMetaType::Bool));
    addKey("vehicle/isPivotBehindAntenna", true, QMetaType(QMetaType::Bool));
    addKey("vehicle/isStanleyUsed", false, QMetaType(QMetaType::Bool));
    addKey("vehicle/isSteerAxleAhead", true, QMetaType(QMetaType::Bool));
    addKey("vehicle/lookAheadMinimum", 2, QMetaType(QMetaType::Double));
    addKey("vehicle/maxAngularVelocity", 0.64, QMetaType(QMetaType::Double));
    addKey("vehicle/maxSteerAngle", 30, QMetaType(QMetaType::Double));
    addKey("vehicle/minCoverage", 100, QMetaType(QMetaType::Double));
    addKey("vehicle/minTurningRadius", 8.1, QMetaType(QMetaType::Double));
    addKey("vehicle/numSections", 3, QMetaType(QMetaType::Double));
    addKey("vehicle/panicStopSpeed", 0, QMetaType(QMetaType::Double));
    addKey("vehicle/purePursuitIntegralGainAB", 0, QMetaType(QMetaType::Double));
    addKey("vehicle/slowSpeedCutoff", 0.5, QMetaType(QMetaType::Double));
    addKey("vehicle/stanleyDistanceErrorGain", 1, QMetaType(QMetaType::Double));
    addKey("vehicle/stanleyHeadingErrorGain", 1, QMetaType(QMetaType::Double));
    addKey("vehicle/stanleyIntegralDistanceAwayTriggerAB", 0.25, QMetaType(QMetaType::Double));
    addKey("vehicle/stanleyIntegralGainAB", 0, QMetaType(QMetaType::Double));
    addKey("vehicle/tankTrailingHitchLength", -3, QMetaType(QMetaType::Double));
    addKey("vehicle/toolLookAheadOff", 0.5, QMetaType(QMetaType::Double));
    addKey("vehicle/toolLookAheadOn", 1, QMetaType(QMetaType::Double));
    addKey("vehicle/toolOffDelay", 0, QMetaType(QMetaType::Double));
    addKey("vehicle/toolOffset", 0, QMetaType(QMetaType::Double));
    addKey("vehicle/toolOverlap", 0, QMetaType(QMetaType::Double));
    addKey("vehicle/toolWidth", 4, QMetaType(QMetaType::Double));
    addKey("vehicle/trackWidth", 1.9, QMetaType(QMetaType::Double));
    addKey("vehicle/vehicleName", QString("Default Vehicle"), QMetaType(QMetaType::QString));
    addKey("vehicle/vehicleType", 0, QMetaType(QMetaType::Int));
    addKey("vehicle/wheelbase", 3.3, QMetaType(QMetaType::Double));
    addKey("window/abDrawLocation", QRect(0,0,1022,742), QMetaType(QMetaType::QRect));
    addKey("window/bingMapSize", QRect(0,0,965,700), QMetaType(QMetaType::QRect));
    addKey("window/bingZoom", 15, QMetaType(QMetaType::Int));
    addKey("window/buildTracksLocation", QPoint(40, 40), QMetaType(QMetaType::QPoint));
    addKey("window/formNudgeLocation", QRect(0,0,200, 200), QMetaType(QMetaType::QRect));
    addKey("window/gridLocation", QPoint(20, 20), QMetaType(QMetaType::QPoint));
    addKey("window/gridSize", QPoint(400, 400), QMetaType(QMetaType::QPoint));
    addKey("window/headAcheSize", "1022, 742", QMetaType(QMetaType::QString));
    addKey("window/headlineSize", "1022, 742", QMetaType(QMetaType::QString));
    addKey("window/isKioskMode", false, QMetaType(QMetaType::Bool));
    addKey("window/isShutdownComputer", false, QMetaType(QMetaType::Bool));
    addKey("window/location", QPoint(30, 30), QMetaType(QMetaType::QPoint));
    addKey("window/mapBndSize", "1022, 742", QMetaType(QMetaType::QString));
    addKey("window/maximized", false, QMetaType(QMetaType::Bool));
    addKey("window/minimized", false, QMetaType(QMetaType::Bool));
    addKey("window/quickABLocation", QPoint(100, 100), QMetaType(QMetaType::QPoint));
    addKey("window/rateMapSize", "1022, 742", QMetaType(QMetaType::QString));
    addKey("window/rateMapZoom", 15, QMetaType(QMetaType::Int));
    addKey("window/size", "1005, 730", QMetaType(QMetaType::QString));
    addKey("window/steerSettingsLocation", QPoint(40, 40), QMetaType(QMetaType::QPoint));
    addKey("window/tramLineSize", "921, 676", QMetaType(QMetaType::QString));
    addKey("youturn/distanceFromBoundary", 2, QMetaType(QMetaType::Double));
    addKey("youturn/extensionLength", 20, QMetaType(QMetaType::Double));
    addKey("youturn/radius", 8.1, QMetaType(QMetaType::Double));
    addKey("youturn/skipWidth", 1, QMetaType(QMetaType::Double));
    addKey("youturn/style", 0, QMetaType(QMetaType::Double));
    addKey("youturn/toolWidths", 2, QMetaType(QMetaType::Double));
    addKey("youturn/youMoveDistance", 0.25, QMetaType(QMetaType::Double));
}

